<project>
  <groupId>com.ryanquey</groupId>
  <artifactId>data-utils</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <name>data-utils</name>
  <packaging>jar</packaging>
  <version>${project-package.version}</version>

  <dependencies>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency> 
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency> 

    <!-- Google core libraries for Java https://github.com/google/guava --> 
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>29.0-jre</version>
		</dependency>

    <!-- datastax/cassandra stuff -->
		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-core</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-query-builder</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-mapper-runtime</artifactId>
			<version>${java-driver.version}</version>
		</dependency>

		<dependency>
			<groupId>com.datastax.oss</groupId>
			<artifactId>java-driver-mapper-processor</artifactId>
			<version>${java-driver.version}</version>
		</dependency>
  </dependencies>

	<build>
		<plugins>
      <!-- https://stackoverflow.com/questions/15013651/using-maven-execexec-with-arguments -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<configuration>
					<mainClass>${mainClass}</mainClass>
					<executable>java</executable>
				</configuration>
			</plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source> <!-- (or higher) -->
					<target>1.8</target> <!-- (or higher) -->
					<annotationProcessorPaths>
						<path>
							<groupId>com.datastax.oss</groupId>
							<artifactId>java-driver-mapper-processor</artifactId>
							<version>${java-driver.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<!--  bundle everything into a single file executable with dependencies when packaging -->
				<!-- https://stackoverflow.com/a/574650/6952495-->
        <!-- also https://stackoverflow.com/a/15799254/6952495 -->
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- build multiple jars, one for each main we want to specify. https://stackoverflow.com/a/8726969/6952495 -->
				<executions>
					<execution>
						<id>data-utils</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
              <descriptorRefs>
				        <!--  bundle everything into a single file executable with dependencies when packaging -->
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <!-- avoid the annoying "-jar-with-dependencies" suffix in the name -->
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>data-utils-${project-package.version}</finalName>
						</configuration>
					</execution>
			  </executions>
			</plugin>
		</plugins>
	</build>

  <properties>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>
		<java-driver.version>4.9.0</java-driver.version>
		<project-package.version>0.5.2</project-package.version>
    <mainClass>com.ryanquey.data-utils.Main</mainClass>
	</properties>
</project>
